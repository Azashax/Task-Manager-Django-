# Generated by Django 4.2.6 on 2025-02-12 07:05

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('time', models.FloatField(blank=True, null=True)),
                ('money', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('fields', models.JSONField(blank=True, default=dict, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='TaskData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('duration', models.JSONField(blank=True, default=dict, null=True)),
                ('money_per_hour', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('several', models.BooleanField(default=False)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subtasks', to='cost_plan.taskdata')),
            ],
        ),
        migrations.CreateModel(
            name='TypeData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='UserProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('roles', models.ManyToManyField(related_name='user_products', to='cost_plan.role')),
            ],
        ),
        migrations.CreateModel(
            name='TaskGroupData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('fields', models.JSONField(blank=True, default=dict, null=True)),
                ('task_data', models.ManyToManyField(blank=True, related_name='task_group_data', to='cost_plan.taskdata')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('duration', models.FloatField(blank=True, null=True)),
                ('money_per_hour', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('archive_is', models.BooleanField(default=False)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='cost_plan.product')),
                ('task_data', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='cost_plan.taskdata')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Tariff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product_data', models.ManyToManyField(blank=True, related_name='tariff', to='cost_plan.productdata')),
            ],
        ),
        migrations.CreateModel(
            name='SubTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('todo', 'To Do'), ('in_progress', 'In Progress'), ('done', 'Done')], default='todo', max_length=50)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('time_spent', models.PositiveIntegerField(default=0, help_text='Time spent in minutes')),
                ('waiting_time', models.PositiveIntegerField(default=0)),
                ('parent_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subtasks', to='cost_plan.task')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subtasks', to='cost_plan.userproduct')),
            ],
        ),
        migrations.AddField(
            model_name='role',
            name='typeTask',
            field=models.ManyToManyField(related_name='role', to='cost_plan.taskdata'),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('money', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('time', models.FloatField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('tariff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='project', to='cost_plan.tariff')),
            ],
        ),
        migrations.AddField(
            model_name='productdata',
            name='task_data',
            field=models.ManyToManyField(blank=True, related_name='product_data', to='cost_plan.taskdata'),
        ),
        migrations.AddField(
            model_name='productdata',
            name='task_group_data',
            field=models.ManyToManyField(blank=True, related_name='product_data', to='cost_plan.taskgroupdata'),
        ),
        migrations.AddField(
            model_name='productdata',
            name='type',
            field=models.ManyToManyField(blank=True, related_name='product_data', to='cost_plan.typedata'),
        ),
        migrations.AddField(
            model_name='product',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='cost_plan.project'),
        ),
        migrations.AddField(
            model_name='product',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='products', to='cost_plan.typedata'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['archive_is'], name='cost_plan_t_archive_030a56_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['product', 'created_at'], name='cost_plan_t_product_c0deda_idx'),
        ),
    ]
