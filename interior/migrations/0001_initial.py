# Generated by Django 4.2.6 on 2024-11-13 11:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import interior.upload_paths


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=255)),
                ('status', models.CharField(choices=[('open', 'open'), ('in progress', 'in progress'), ('complete', 'complete'), ('on test', 'on test'), ('checked', 'checked'), ('correcting', 'correcting'), ('waiting', 'waiting'), ('restock', 'restock'), ('rejected', 'rejected')], default='open', max_length=20)),
                ('built', models.CharField(choices=[('finished', 'finished'), ('off plan', 'off plan')], default='finished', max_length=20)),
                ('type', models.CharField(choices=[('Tower', 'Tower'), ('Villa', 'Villa')], default='Tower', max_length=20)),
                ('link_click_up', models.TextField(blank=True, null=True)),
                ('link_cet3', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ProjectsFilterTeg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teg', models.CharField(max_length=256)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('open', 'open'), ('in progress', 'in progress'), ('complete', 'complete'), ('on test', 'on test'), ('checked', 'checked'), ('correcting', 'correcting'), ('waiting', 'waiting'), ('restock', 'restock'), ('rejected', 'rejected')], db_index=True, default='open', max_length=20)),
                ('type', models.CharField(choices=[('none', 'none'), ('assemble', 'assemble'), ('without', 'without'), ('with', 'with'), ('gltf', 'gltf'), ('upload', 'upload'), ('render2d', 'render2d'), ('2d upload', '2d upload')], db_index=True, max_length=20)),
                ('in_progress_time', models.DateTimeField(blank=True, null=True)),
                ('checked_time', models.DateTimeField(blank=True, null=True)),
                ('complete_time', models.DateTimeField(blank=True, null=True)),
                ('point', models.FloatField(blank=True, null=True)),
                ('additional_point', models.FloatField(blank=True, null=True)),
                ('total_correcting', models.IntegerField(default=0)),
                ('info_data', models.JSONField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='task_changed_by', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь изменивший задачу')),
                ('employee_user', models.ForeignKey(blank=True, limit_choices_to={'role': 'InteriorEmployee'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks_as_employee', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь Employee')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='interior.project')),
                ('qa_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks_as_qa', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь QA')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='UnassignedTasks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('task', models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='ready_for_assignment', to='interior.task')),
            ],
        ),
        migrations.CreateModel(
            name='TaskMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_correcting', models.IntegerField(default=0)),
                ('message', models.CharField(blank=True, max_length=1024, null=True)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('task', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='task_messages', to='interior.task')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='task_messages', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='TaskImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=interior.upload_paths.task_images)),
                ('file_info', models.JSONField(blank=True, null=True)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='task_image', to='interior.task')),
            ],
        ),
        migrations.CreateModel(
            name='TaskForReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('task', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='task_for_review', to='interior.task')),
            ],
        ),
        migrations.CreateModel(
            name='TaskFiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=interior.upload_paths.task_files)),
                ('file_info', models.JSONField(blank=True, null=True)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='task_file', to='interior.task')),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='filter_teg',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='interior.projectsfilterteg'),
        ),
        migrations.AddField(
            model_name='project',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='region', to='interior.region'),
        ),
        migrations.AddField(
            model_name='project',
            name='team_lead_user',
            field=models.ForeignKey(blank=True, limit_choices_to={'role': 'InteriorTeamLead'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='interior_project_team_lead_user', to=settings.AUTH_USER_MODEL, verbose_name='Team Lead'),
        ),
        migrations.CreateModel(
            name='MessageImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, null=True, upload_to=interior.upload_paths.message_images)),
                ('task_message', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='task_message_images', to='interior.taskmessage')),
            ],
        ),
        migrations.CreateModel(
            name='HistoryTasksTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(db_index=True, max_length=50, verbose_name='Измененное поле')),
                ('old_value', models.TextField(blank=True, db_index=True, null=True, verbose_name='Старое значение')),
                ('new_value', models.TextField(blank=True, db_index=True, null=True, verbose_name='Новое значение')),
                ('changed_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='Время изменения')),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='history_transactions', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь изменивший задачу')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history_transactions', to='interior.task')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='UserTaskStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField(default=0)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('task', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='task_stock', to='interior.task')),
            ],
            options={
                'ordering': ['position'],
                'indexes': [models.Index(fields=['task'], name='interior_us_task_id_1ae908_idx'), models.Index(fields=['position'], name='interior_us_positio_0b597d_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['employee_user'], name='interior_ta_employe_6c470a_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['qa_user'], name='interior_ta_qa_user_1e45f3_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['project'], name='interior_ta_project_5fc07e_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['status'], name='interior_ta_status_cfc497_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['type'], name='interior_ta_type_60f731_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['title'], name='interior_pr_title_3c2706_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['team_lead_user'], name='interior_pr_team_le_5c7bbb_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['type'], name='interior_pr_type_ed99e5_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['status'], name='interior_pr_status_3cd4fd_idx'),
        ),
        migrations.AddIndex(
            model_name='historytaskstransaction',
            index=models.Index(fields=['task'], name='interior_hi_task_id_a26caf_idx'),
        ),
        migrations.AddIndex(
            model_name='historytaskstransaction',
            index=models.Index(fields=['changed_by'], name='interior_hi_changed_7c77e6_idx'),
        ),
        migrations.AddIndex(
            model_name='historytaskstransaction',
            index=models.Index(fields=['field_name'], name='interior_hi_field_n_e25bf2_idx'),
        ),
        migrations.AddIndex(
            model_name='historytaskstransaction',
            index=models.Index(fields=['old_value'], name='interior_hi_old_val_b03c2c_idx'),
        ),
        migrations.AddIndex(
            model_name='historytaskstransaction',
            index=models.Index(fields=['new_value'], name='interior_hi_new_val_8d5d06_idx'),
        ),
        migrations.AddIndex(
            model_name='historytaskstransaction',
            index=models.Index(fields=['changed_at'], name='interior_hi_changed_7aa129_idx'),
        ),
    ]
